{"remainingRequest":"E:\\我的站点\\Vue实战\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\我的站点\\Vue实战\\vue_shop\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\我的站点\\Vue实战\\vue_shop\\src\\components\\Login.vue","mtime":1595732821681},{"path":"E:\\我的站点\\Vue实战\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595827407394},{"path":"E:\\我的站点\\Vue实战\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1595827404638},{"path":"E:\\我的站点\\Vue实战\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1595827407394},{"path":"E:\\我的站点\\Vue实战\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgLy8g6L+Z5piv55m75b2V6KGo5Y2V55qE5pWw5o2u57uR5a6a5a+56LGhDQogICAgICBsb2dpbkZvcm06IHsNCiAgICAgICAgdXNlcm5hbWU6ICcnLA0KICAgICAgICBwYXNzd29yZDogJycNCiAgICAgIH0sDQogICAgICAvLyDov5nmmK/ooajljZXnmoTpqozor4Hop4TliJnlr7nosaENCiAgICAgIGxvZ2luRm9ybVJ1bGVzOiB7DQogICAgICAgIC8vIOi/meaYr+mqjOivgeeUqOaIt+WQjeaYr+WQpuWQiOazlQ0KICAgICAgICB1c2VybmFtZTogWw0KICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXnmbvlvZXlkI3np7AnLCB0cmlnZ2VyOiAnYmx1cicgfSwNCiAgICAgICAgICB7IG1pbjogMywgbWF4OiAxMCwgbWVzc2FnZTogJ+mVv+W6puWcqCAzIOWIsCAxMCDkuKrlrZfnrKYnLCB0cmlnZ2VyOiAnYmx1cicgfQ0KICAgICAgICBdLA0KICAgICAgICAvLyDov5nmmK/pqozor4Hlr4bnoIHmmK/lkKblkIjms5UNCiAgICAgICAgcGFzc3dvcmQ6IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl55m75b2V5a+G56CBJywgdHJpZ2dlcjogJ2JsdXInIH0sDQogICAgICAgICAgeyBtaW46IDYsIG1heDogMTUsIG1lc3NhZ2U6ICfplb/luqblnKggNiDliLAgMTUg5Liq5a2X56ymJywgdHJpZ2dlcjogJ2JsdXInIH0NCiAgICAgICAgXQ0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8vIOi/meaYr+mHjee9rueZu+W9leihqOWNleaWueazlQ0KICAgIHJlc2V0bG9naW5Gb3JtICgpIHsNCiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMpOw0KICAgICAgdGhpcy4kcmVmcy5sb2dpbkZvcm1SZWYucmVzZXRGaWVsZHMoKQ0KICAgIH0sDQogICAgLy8g6L+Z5piv5Zyo54K55Ye755m75b2V5oyJ6ZKu5LmL5ZCO77yM5YaN5qyh6aqM6K+B6KGo5Y2V5L+h5oGvDQogICAgbG9naW4gKCkgew0KICAgICAgdGhpcy4kcmVmcy5sb2dpbkZvcm1SZWYudmFsaWRhdGUoYXN5bmMgKHZhbGlkKSA9PiB7DQogICAgICAgIC8vIOWmguaenOihqOWNlemqjOivgeaIkOWKn+WwseeZu+W9lQ0KICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1yZXR1cm4NCiAgICAgICAgaWYgKCF2YWxpZCkgcmV0dXJuDQogICAgICAgIC8vIOWPkei1t+eZu+W9leivt+axgg0KICAgICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5wb3N0KCdsb2dpbicsIHRoaXMubG9naW5Gb3JtKQ0KICAgICAgICBpZiAocmVzLm1ldGEuc3RhdHVzICE9PSAyMDApIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfnmbvlvZXlpLHotKXvvIEnKQ0KICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+eZu+W9leaIkOWKn++8gScpDQogICAgICAgIC8vIDHjgIHlsIbnmbvlvZXmiJDlip/kuYvlkI7nmoR0b2tlbu+8jOS/neWtmOWIsOWuouaIt+err+eahHNlc3Npb25TdG9yYWdl5LitDQogICAgICAgIC8vICAxLjHpobnnm67kuK3pmaTkuobnmbvlvZXkuYvlpJbnmoTlhbbku5ZBUEnmjqXlj6PvvIzlv4XpobvnmbvlvZXkuYvlkI7miY3og73orr/pl64NCiAgICAgICAgLy8gIDEuMnRva2Vu5Y+q5bqU5Zyo5b2T5YmN572R56uZ5omT5byA5pyf6Ze055Sf5pWI77yM5omA5Lul5bCGdG9rZW7kv53lrZjlnKhzZXNzaW9uU3RvcmFnZeS4rQ0KICAgICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCByZXMuZGF0YS50b2tlbikNCiAgICAgICAgLy8gMuOAgemAmui/h+e8lueoi+W8j+WvvOiIqui3s+i9rOWIsOWQjuWPsOS4u+mhte+8jOi3r+eUseWcsOWdgOW8jy9ob21lDQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvaG9tZScpDQogICAgICB9KQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"login_container\">\r\n        <div class=\"login_box\">\r\n            <!--头像区域-->\r\n            <div class=\"avatar_box\">\r\n                <img src=\"../assets/logo.png\" alt=\"\" srcset=\"\">\r\n            </div>\r\n            <!--登录表单-->\r\n            <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginFormRules\"  label-width=\"0px\" class=\"login_form\">\r\n                <!-- 用户名 -->\r\n                <el-form-item prop=\"username\">\r\n                    <el-input v-model=\"loginForm.username\" prefix-icon=\"iconfont icon-user\"></el-input>\r\n                </el-form-item>\r\n                <!-- 密码 -->\r\n                <el-form-item prop=\"password\">\r\n                    <el-input v-model=\"loginForm.password\" prefix-icon=\"iconfont icon-3702mima\" type=\"password\"></el-input>\r\n                </el-form-item>\r\n                <!-- 按钮区域 -->\r\n                <el-form-item class=\"btns\">\r\n                    <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n                    <el-button type=\"info\" @click=\"resetloginForm\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n    // 这是登录表单的数据绑定对象\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      // 这是表单的验证规则对象\r\n      loginFormRules: {\r\n        // 这是验证用户名是否合法\r\n        username: [\r\n          { required: true, message: '请输入登录名称', trigger: 'blur' },\r\n          { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\r\n        ],\r\n        // 这是验证密码是否合法\r\n        password: [\r\n          { required: true, message: '请输入登录密码', trigger: 'blur' },\r\n          { min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 这是重置登录表单方法\r\n    resetloginForm () {\r\n      // console.log(this);\r\n      this.$refs.loginFormRef.resetFields()\r\n    },\r\n    // 这是在点击登录按钮之后，再次验证表单信息\r\n    login () {\r\n      this.$refs.loginFormRef.validate(async (valid) => {\r\n        // 如果表单验证成功就登录\r\n        // eslint-disable-next-line no-useless-return\r\n        if (!valid) return\r\n        // 发起登录请求\r\n        const { data: res } = await this.$http.post('login', this.loginForm)\r\n        if (res.meta.status !== 200) return this.$message.error('登录失败！')\r\n        this.$message.success('登录成功！')\r\n        // 1、将登录成功之后的token，保存到客户端的sessionStorage中\r\n        //  1.1项目中除了登录之外的其他API接口，必须登录之后才能访问\r\n        //  1.2token只应在当前网站打开期间生效，所以将token保存在sessionStorage中\r\n        window.sessionStorage.setItem('token', res.data.token)\r\n        // 2、通过编程式导航跳转到后台主页，路由地址式/home\r\n        this.$router.push('/home')\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.login_container{\r\n    background-color: #2b4b6b;\r\n    height: 100%;\r\n}\r\n\r\n.login_box{\r\n    width: 450px;\r\n    height: 300px;\r\n    background-color: #ffffff;\r\n    border-radius: 3px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate( -50%, -50% );\r\n    .avatar_box{\r\n        height: 130px;\r\n        width: 130px;\r\n        border: 1px solid #eeeeee;\r\n        border-radius: 50%;\r\n        padding: 10px;\r\n        box-shadow: 0 0 10px #dddddd;\r\n        position: absolute;\r\n        left: 50%;\r\n        transform: translate(-50%,-50%);\r\n        background-color: #ffffff;\r\n        img{\r\n            width: 100%;\r\n            height: 100%;\r\n            border-radius: 50%;\r\n            background-color: #eeeeee;\r\n        }\r\n    }\r\n}\r\n.login_form{\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    padding: 0 20px;\r\n    box-sizing: border-box;\r\n}\r\n.btns{\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n</style>\r\n"]}]}